/*# AST
multi(vec![
    empty_type(inherited(), "Dog").into(),
    function(
        inherited(),
        "bark",
        params(
            vec![
                (DeclModifier::Ref, "dog", plain("Dog")),
            ]),
        None,
        body()
    ).into()
])
*/

/*# TRANSPILE
"
pub(crate) struct Dog;
pub(crate) fn bark(dog: std::sync::Arc<std::sync::Mutex<Dog>>) { }
"
*/
type Dog

fn bark(ref dog: Dog) { }