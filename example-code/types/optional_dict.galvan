/*# AST
single(
    struct_type(inherited(), "Foo", vec![
        struct_member("bar",
            optional(dict(plain("String"), plain("String")))
        )]
    )
)
*/

/*# TRANSPILE
"#[derive(Clone, Debug, PartialEq)] pub(crate) struct Foo {
    pub(crate) bar: Option<std::collections::HashMap<String, String>>
}"
*/

type Foo {
    bar: {String: String}?
}
